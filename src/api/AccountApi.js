/*
 * eSuite API - OpenAPI 3.0
 * This is a sample eSuite API Server based on the OpenAPI 3.0 specification.
 *
 * OpenAPI spec version: 11.29.11
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.40
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from "../ApiClient.js";
import { Account } from "../model/Account.js";

/**
 * Account service.
 * @module api/AccountApi
 * @version 11.29.11
 */
export class AccountApi {
  /**
    * Constructs a new AccountApi. 
    * @alias module:api/AccountApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the addAccount operation.
   * @callback moduleapi/AccountApi~addAccountCallback
   * @param {String} error Error message, if any.
   * @param {module:model/Account{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Add a new account to eSuite
   * Add a new account to eSuite
   * @param {module:model/Account} body Create a new account in eSuite
   * @param {module:api/AccountApi~addAccountCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  addAccount(body, callback) {
    let postBody = body;
    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error(
        "Missing the required parameter 'body' when calling addAccount"
      );
    }

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = ["ApiKeyAuth"];
    let contentTypes = ["application/json"];
    let accepts = ["application/json"];
    let returnType = Account;

    return this.apiClient.callApi(
      "/account",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callback
    );
  }
}
