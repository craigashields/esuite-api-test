/*
 * eSuite API - OpenAPI 3.0
 * This is a sample eSuite API Server based on the OpenAPI 3.0 specification.
 *
 * OpenAPI spec version: 11.29.11
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.40
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ESuiteApiOpenApi30);
  }
}(this, function(expect, ESuiteApiOpenApi30) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Account', function() {
      beforeEach(function() {
        instance = new ESuiteApiOpenApi30.Account();
      });

      it('should create an instance of Account', function() {
        // TODO: update the code to test Account
        expect(instance).to.be.a(ESuiteApiOpenApi30.Account);
      });

      it('should have the property email (base name: "email")', function() {
        // TODO: update the code to test the property email
        expect(instance).to.have.property('email');
        // expect(instance.email).to.be(expectedValueLiteral);
      });

      it('should have the property password (base name: "password")', function() {
        // TODO: update the code to test the property password
        expect(instance).to.have.property('password');
        // expect(instance.password).to.be(expectedValueLiteral);
      });

      it('should have the property firstName (base name: "firstName")', function() {
        // TODO: update the code to test the property firstName
        expect(instance).to.have.property('firstName');
        // expect(instance.firstName).to.be(expectedValueLiteral);
      });

      it('should have the property lastName (base name: "lastName")', function() {
        // TODO: update the code to test the property lastName
        expect(instance).to.have.property('lastName');
        // expect(instance.lastName).to.be(expectedValueLiteral);
      });

      it('should have the property allowMarketing (base name: "allowMarketing")', function() {
        // TODO: update the code to test the property allowMarketing
        expect(instance).to.have.property('allowMarketing');
        // expect(instance.allowMarketing).to.be(expectedValueLiteral);
      });

    });
  });

}));
